/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:568318:
  appc.background(230);
} //_CODE_:window1:568318:

public void InflationRatesSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:inflationRatesSlider:590916:
  println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:inflationRatesSlider:590916:

public void interestRatesSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:interestRatesSlider:342659:
  println("custom_slider2 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:interestRatesSlider:342659:

public void volatilityIndexSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:volatilityIndexSlider:426409:
  println("custom_slider3 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:volatilityIndexSlider:426409:

public void marketTypeOptions(GDropList source, GEvent event) { //_CODE_:marketType:404878:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:marketType:404878:

public void scaleFactorSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:scaleFactorSlider:841348:
  println("custom_slider4 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:scaleFactorSlider:841348:

public void employeeTreatmentSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:employeeTreatmentSlider:643907:
  println("employeeTreatmentSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:employeeTreatmentSlider:643907:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 500, 500, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  inflationRatesTextbox = new GLabel(window1, 3, 29, 81, 20);
  inflationRatesTextbox.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  inflationRatesTextbox.setText("Inflation Rate");
  inflationRatesTextbox.setOpaque(false);
  inflationRatesSlider = new GCustomSlider(window1, 91, 18, 100, 40, "grey_blue");
  inflationRatesSlider.setLimits(0.5, 0.0, 100.0);
  inflationRatesSlider.setNumberFormat(G4P.DECIMAL, 2);
  inflationRatesSlider.setOpaque(false);
  inflationRatesSlider.addEventHandler(this, "InflationRatesSliderChanged");
  label1 = new GLabel(window1, 2, 67, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Interest Rate");
  label1.setOpaque(false);
  interestRatesSlider = new GCustomSlider(window1, 91, 56, 100, 40, "grey_blue");
  interestRatesSlider.setLimits(0.5, 0.0, 1.0);
  interestRatesSlider.setNumberFormat(G4P.DECIMAL, 2);
  interestRatesSlider.setOpaque(false);
  interestRatesSlider.addEventHandler(this, "interestRatesSliderChanged");
  label2 = new GLabel(window1, 4, 112, 192, 26);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Quality of Employee Treatment");
  label2.setOpaque(false);
  label3 = new GLabel(window1, -4, 163, 144, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Volatility Index Score");
  label3.setOpaque(false);
  volatilityIndexSlider = new GCustomSlider(window1, 159, 152, 100, 40, "grey_blue");
  volatilityIndexSlider.setLimits(0.5, 0.0, 1.0);
  volatilityIndexSlider.setNumberFormat(G4P.DECIMAL, 2);
  volatilityIndexSlider.setOpaque(false);
  volatilityIndexSlider.addEventHandler(this, "volatilityIndexSliderChanged");
  marketType = new GDropList(window1, 374, 14, 90, 60, 2, 10);
  marketType.setItems(loadStrings("list_404878"), 2);
  marketType.addEventHandler(this, "marketTypeOptions");
  label4 = new GLabel(window1, 281, 16, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Market Type");
  label4.setOpaque(false);
  label5 = new GLabel(window1, 7, 216, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Scale Factor");
  label5.setOpaque(false);
  scaleFactorSlider = new GCustomSlider(window1, 104, 208, 100, 40, "grey_blue");
  scaleFactorSlider.setLimits(0.5, 0.0, 1.0);
  scaleFactorSlider.setNumberFormat(G4P.DECIMAL, 2);
  scaleFactorSlider.setOpaque(false);
  scaleFactorSlider.addEventHandler(this, "scaleFactorSliderChanged");
  employeeTreatmentSlider = new GCustomSlider(window1, 212, 102, 100, 40, "grey_blue");
  employeeTreatmentSlider.setLimits(0.5, 0.0, 1.0);
  employeeTreatmentSlider.setNumberFormat(G4P.DECIMAL, 2);
  employeeTreatmentSlider.setOpaque(false);
  employeeTreatmentSlider.addEventHandler(this, "employeeTreatmentSliderChanged");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GLabel inflationRatesTextbox; 
GCustomSlider inflationRatesSlider; 
GLabel label1; 
GCustomSlider interestRatesSlider; 
GLabel label2; 
GLabel label3; 
GCustomSlider volatilityIndexSlider; 
GDropList marketType; 
GLabel label4; 
GLabel label5; 
GCustomSlider scaleFactorSlider; 
GCustomSlider employeeTreatmentSlider; 

