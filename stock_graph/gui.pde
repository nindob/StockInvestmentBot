/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:568318:
  appc.background(230);
} //_CODE_:window1:568318:

public void custom_slider1_change1(GCustomSlider source, GEvent event) { //_CODE_:custom_slider1:590916:
  println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:custom_slider1:590916:

public void custom_slider2_change1(GCustomSlider source, GEvent event) { //_CODE_:custom_slider2:342659:
  println("custom_slider2 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:custom_slider2:342659:

public void knob1_turn1(GKnob source, GEvent event) { //_CODE_:knob1:582931:
  println("knob1 - GKnob >> GEvent." + event + " @ " + millis());
} //_CODE_:knob1:582931:

public void custom_slider3_change1(GCustomSlider source, GEvent event) { //_CODE_:custom_slider3:426409:
  println("custom_slider3 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:custom_slider3:426409:

public void marketTypeOptions(GDropList source, GEvent event) { //_CODE_:marketType:404878:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:marketType:404878:

public void custom_slider4_change1(GCustomSlider source, GEvent event) { //_CODE_:custom_slider4:841348:
  println("custom_slider4 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:custom_slider4:841348:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 500, 500, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  inflationRatesTextbox = new GLabel(window1, 3, 29, 81, 20);
  inflationRatesTextbox.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  inflationRatesTextbox.setText("Inflation Rate");
  inflationRatesTextbox.setOpaque(false);
  custom_slider1 = new GCustomSlider(window1, 91, 18, 100, 40, "grey_blue");
  custom_slider1.setLimits(0.5, 0.0, 1.0);
  custom_slider1.setNumberFormat(G4P.DECIMAL, 2);
  custom_slider1.setOpaque(false);
  custom_slider1.addEventHandler(this, "custom_slider1_change1");
  label1 = new GLabel(window1, 2, 67, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Interest Rate");
  label1.setOpaque(false);
  custom_slider2 = new GCustomSlider(window1, 91, 56, 100, 40, "grey_blue");
  custom_slider2.setLimits(0.5, 0.0, 1.0);
  custom_slider2.setNumberFormat(G4P.DECIMAL, 2);
  custom_slider2.setOpaque(false);
  custom_slider2.addEventHandler(this, "custom_slider2_change1");
  label2 = new GLabel(window1, 4, 112, 192, 26);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Quality of Employee Treatment");
  label2.setOpaque(false);
  knob1 = new GKnob(window1, 211, 84, 60, 60, 0.8);
  knob1.setTurnRange(110, 70);
  knob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  knob1.setSensitivity(1);
  knob1.setShowArcOnly(false);
  knob1.setOverArcOnly(false);
  knob1.setIncludeOverBezel(false);
  knob1.setShowTrack(true);
  knob1.setLimits(0.5, 0.0, 1.0);
  knob1.setShowTicks(true);
  knob1.setOpaque(false);
  knob1.addEventHandler(this, "knob1_turn1");
  label3 = new GLabel(window1, -4, 163, 144, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Volatility Index Score");
  label3.setOpaque(false);
  custom_slider3 = new GCustomSlider(window1, 159, 152, 100, 40, "grey_blue");
  custom_slider3.setLimits(0.5, 0.0, 1.0);
  custom_slider3.setNumberFormat(G4P.DECIMAL, 2);
  custom_slider3.setOpaque(false);
  custom_slider3.addEventHandler(this, "custom_slider3_change1");
  marketType = new GDropList(window1, 374, 14, 90, 60, 2, 10);
  marketType.setItems(loadStrings("list_404878"), 2);
  marketType.addEventHandler(this, "marketTypeOptions");
  label4 = new GLabel(window1, 281, 16, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Market Type");
  label4.setOpaque(false);
  label5 = new GLabel(window1, 7, 216, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Scale Factor");
  label5.setOpaque(false);
  custom_slider4 = new GCustomSlider(window1, 104, 208, 100, 40, "grey_blue");
  custom_slider4.setLimits(0.5, 0.0, 1.0);
  custom_slider4.setNumberFormat(G4P.DECIMAL, 2);
  custom_slider4.setOpaque(false);
  custom_slider4.addEventHandler(this, "custom_slider4_change1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GLabel inflationRatesTextbox; 
GCustomSlider custom_slider1; 
GLabel label1; 
GCustomSlider custom_slider2; 
GLabel label2; 
GKnob knob1; 
GLabel label3; 
GCustomSlider custom_slider3; 
GDropList marketType; 
GLabel label4; 
GLabel label5; 
GCustomSlider custom_slider4; 
